<?xml version='1.0'?>

<project xmlns:if="ant:if" xmlns:unless="ant:unless">

	<import file="dist.xml" />

	<target name="compile_polanieonlinetools" description="Compile PolanieOnLine build tools.">
		<mkdir dir="${build_polanieonlinetools}"/>

		<javac srcdir="${src}" destdir="${build_polanieonlinetools}" source="1.8" target="1.8" debug="${javac.debug}" debuglevel="${javac.debuglevel}" deprecation="${javac.deprecation}" includeantruntime="true">
			<include name="games/stendhal/tools/**/*.java"/>
			<include name="games/stendhal/tools/*.java"/>
			<compilerarg value="-encoding"/>
			<compilerarg value="utf-8"/>
			<compilerarg value="-Xlint:unchecked"/>

			<classpath>
				<pathelement path="${guava_jar}"/>
				<pathelement path="${marauroa_jar}"/>
				<pathelement path="${log4j_jar}"/>
				<pathelement path="${groovy_jar}"/>
				<pathelement path="${tiled_jar}"/>
				<pathelement path="${jorbis_jar}"/>
				<pathelement path="${swinglayout_jar}"/>
				<pathelement path="${luaj_jar}"/>
				<pathelement path="${jsonsimple_jar}"/>
			</classpath>
		</javac>
	</target> <!-- compile_polanieonlinetools -->

	<target name="clean_whitespace" description="Clean whitespace in source and other specified file types." depends="compile_polanieonlinetools">
		<!-- process main Java source, config, & scripting files -->
		<java classname="games.stendhal.tools.CleanWhitespace">
			<classpath>
				<pathelement path="${build_polanieonlinetools}"/>
			</classpath>
			<arg value="src/"/>
			<arg value="tests/"/>
			<arg value="android/app/src/"/>
			<arg value="java,xml,lua"/>
		</java>

		<!-- process web client source files -->
		<java classname="games.stendhal.tools.CleanWhitespace">
			<classpath>
				<pathelement path="${build_polanieonlinetools}"/>
			</classpath>
			<arg value="${srcjs}/"/>
			<arg value="js,ts,css"/>
		</java>

		<!-- process config & scripting data files -->
		<java classname="games.stendhal.tools.CleanWhitespace">
			<classpath>
				<pathelement path="${build_polanieonlinetools}"/>
			</classpath>
			<arg value="data/"/>
			<arg value="tiled/"/>
			<arg value="xml,xsd,lua,py"/>
		</java>
	</target> <!-- clean_whitespace -->


	<target name="cleanwhitespace" depends="clean_whitespace" description="Alias of clean_whitespace."/>


	<target name="postman" description="Build postman bot.">
		<mkdir dir="${buildroot}/buildbot"/>
		<javac srcdir="${src}" destdir="${buildroot}/buildbot" debug="${javac.debug}" debuglevel="${javac.debuglevel}" source="1.8" target="1.8" deprecation="${javac.deprecation}" includeantruntime="false">
			<include name="net/sf/arianne/postman/*.java"/>
			<include name="net/sf/arianne/postman/**/*.java"/>

			<compilerarg value="-encoding"/>
			<compilerarg value="utf-8"/>
			<compilerarg value="-Xlint:unchecked"/>

			<classpath>
				<pathelement path="${build_server}"/>
				<pathelement path="${marauroa_jar}"/>
				<pathelement path="${log4j_jar}"/>
				<pathelement path="${junit_jar}"/>
				<pathelement path="libs/postman/pircbotx-2.0.1.jar"/>
				<pathelement path="libs/postman/commons-lang3-3.2.1.jar"/>
				<pathelement path="libs/postman/jwbf-2.0-SNAPSHOT.jar"/>
			</classpath>

		</javac>
		<jar jarfile="${buildroot}/buildbot/postman.jar">
			<fileset dir="${buildroot}/buildbot">
				<include name="net/sf/arianne/postman/*"/>
				<include name="net/sf/arianne/postman/**/*"/>
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="net.sf.arianne.postman.PostmanMain"/>
			</manifest>
		</jar>
	</target> <!-- postman -->


	<target name="signupdates" description="Sign updates." depends="compile_polanieonlinetools,jardiff" unless="exclude.signing">
		<taskdef name="updatesigner" classname="games.stendhal.tools.updateprop.UpdateSigner">
			<classpath>
				<pathelement path="."/>
				<pathelement path="${build_polanieonlinetools}"/>
			</classpath>
		</taskdef>

		<updatesigner>
			<fileset dir="${lib}">
				<include name="*.jar"/>
			</fileset>
		</updatesigner>
	</target> <!-- signupdates -->


	<target name="jardiff" depends="client_build" unless="exclude.jardiff" description="Generate release changes info.">
		<echo>Creating update from ${version.old} to ${version}</echo>
		<delete>
			<fileset dir="${build-archive}">
				<exclude name="*.zip"/>
			</fileset>
		</delete>
		<unzip src="${build-archive}/polanieonline-${version.old}.zip" dest="${build-archive}"/>
		<java jar="libs/jardiff.jar" fork="true">
			<arg value="-nonminimal"/>
			<arg value="-creatediff"/>
			<arg value="-output"/>
			<arg value="${build}/lib/polanieonline-diff-${version.old}-${version}.jar"/>
			<arg value="${build-archive}/lib/polanieonline.jar"/>
			<arg value="${build}/lib/polanieonline-${version}.jar"/>
		</java>
		<java jar="libs/jardiff.jar" fork="true">
			<arg value="-nonminimal"/>
			<arg value="-creatediff"/>
			<arg value="-output"/>
			<arg value="${build}/lib/polanieonline-data-diff-${version.old}-${version}.jar"/>
			<arg value="${build-archive}/lib/polanieonline-data.jar"/>
			<arg value="${build}/lib/polanieonline-data-${version}.jar"/>
		</java>
		<java jar="libs/jardiff.jar" fork="true">
			<arg value="-nonminimal"/>
			<arg value="-creatediff"/>
			<arg value="-output"/>
			<arg value="${build}/lib/polanieonline-music-data-diff-${version.old}-${version}.jar"/>
			<arg value="${build-archive}/lib/polanieonline-music-data.jar"/>
			<arg value="${build}/lib/polanieonline-music-data-${version}.jar"/>
		</java>
		<java jar="libs/jardiff.jar" fork="true">
			<arg value="-nonminimal"/>
			<arg value="-creatediff"/>
			<arg value="-output"/>
			<arg value="${build}/lib/polanieonline-sound-data-diff-${version.old}-${version}.jar"/>
			<arg value="${build-archive}/lib/polanieonline-sound-data.jar"/>
			<arg value="${build}/lib/polanieonline-sound-data-${version}.jar"/>
		</java>
		<!-- TODO: maraurora.jar-->
	</target> <!-- jardiff -->


	<!-- USAGE: ant balance -Dcreature="<creature_name>" -->
	<target name="balance" description="Run enemy balancer." depends="compile_polanieonlinetools,server_build">
		<java classname="games.stendhal.tools.BalanceRPGame">
			<classpath>
				<pathelement path="${build_polanieonlinetools}"/>
				<pathelement path="."/>
				<pathelement path="${build_server}"/>
				<pathelement path="${testsrc}"/>
				<pathelement path="${marauroa_jar}"/>
				<pathelement path="${log4j_jar}"/>
				<pathelement path="${guava_jar}"/>
				<pathelement path="${groovy_jar}"/>
			</classpath>
			<arg line="${creature}"/>
			<sysproperty key="showxp" value=""/>
		</java>
	</target> <!-- balance -->

</project>
