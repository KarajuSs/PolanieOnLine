<?xml version='1.0'?>

<project name="polanieonline" default="compile" basedir=".">
  <!--
    Sets a property (by name and value), or set of properties (from file or resource) in the project. Properties are case sensitive.
    Properties are immutable: whoever sets a property first freezes it for the rest of the build; they are most definitely not variables.
  -->
  <property environment="env"/>

  <condition property="os.win">
    <os family="windows"/>
  </condition>

  <condition property="exe.ext" value=".exe" else="">
    <equals arg1="${os.win}" arg2="true"/>
  </condition>
  <condition property="executable.npm" value="npm.cmd" else="npm">
    <equals arg1="${os.win}" arg2="true"/>
  </condition>

  <!-- check for some executables -->
  <available property="python.present" file="python${exe.ext}" filepath="${env.PATH}"/>
  <available property="python3.present" file="python3${exe.ext}" filepath="${env.PATH}"/>

  <property file="build.ant-private.properties"/>
  <property file="build.ant.properties"/>

  <property name="build_tests" value="${buildroot}/build_tests"/>
  <property name="build_tests_report" value="${buildroot}/build_test_report"/>

  <property name="build_client" value="${buildroot}/build_client"/>
  <property name="build_client_data" value="${buildroot}/build_client_data"/>
  <property name="build_client_sound_data" value="${buildroot}/build_client_sound_data"/>
  <property name="build_client_music_data" value="${buildroot}/build_client_music_data"/>

  <property name="build_webclient" value="${buildroot}/build_webclient"/>

  <property name="build_docker" value="${buildroot}/build_docker"/>
  <property name="buildtools_docker" value="buildtools/docker"/>

  <property name="build_postman" value="${buildroot}/buildbot/"/>

  <property name="build_server" value="${buildroot}/build_server"/>
  <property name="build_server_maps" value="${buildroot}/build_server_maps"/>
  <property name="build_server_script" value="${buildroot}/build_server_script"/>
  <property name="build_server_mods" value="${buildroot}/build_server_mods"/>
  <property name="build_server_xmlconf" value="${buildroot}/build_server_xmlconf"/>

  <property name="build_polanieonlinetools" value="${buildroot}/build_polanieonlinetools"/>
  <property name="build_polanieonlinetextclient" value="${buildroot}/build_polanieonlinetextclient"/>

  <property name="client_data" value="polanieonline-data-${version}.jar"/>
  <property name="client_jarname" value="polanieonline-${version}.jar"/>
  <property name="client_sound_data" value="polanieonline-sound-data-${version}.jar"/>
  <property name="client_music_data" value="polanieonline-music-data-${version}.jar"/>
  <property name="client_starter_jarname" value="polanieonline-starter-${version}.jar"/>

  <property name="dist_server_binary" value="${buildroot}/polanieonline-server-${version}.zip" />

  <property name="maps_jarname" value="polanieonline-maps-${version}.jar"/>

  <property name="server_jarname" value="polanieonline-server-${version}.jar"/>
  <property name="xmlconf_jarname" value="polanieonline-xmlconf-${version}.jar"/>

  <property name="config_dir" value="data/conf"/>

  <property name="schema_location" value="${config_dir}"/>

  <property name="cobertura.dir" value="${libdir}/cobertura"/>

  <condition property="exclude.signing" value="true">
    <not>
      <available file="keystore.ks"/>
    </not>
  </condition>
  <condition property="exclude.jardiff" value="true">
    <not>
      <available file="${build-archive}/polanieonline-${version.old}.zip"/>
    </not>
  </condition>

  <tstamp>
    <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
  </tstamp>

  <import file="build-private.xml" optional="true"/>

  <import file="${ant_modules}/main.xml"/>
  <import file="${ant_modules}/clean.xml"/>
  <import file="${ant_modules}/dist.xml"/>
  <import file="${ant_modules}/maps.xml"/>
  <import file="${ant_modules}/docs.xml"/>
  <import file="${ant_modules}/testing.xml"/>
  <import file="${ant_modules}/tools.xml"/>

</project>